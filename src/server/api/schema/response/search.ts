/**
 * This file was automatically generated by typescript-json-schema
 */
import { Definition } from "typescript-json-schema";

export const SearchResponseSchema: Definition = {
  type: "object",
  properties: {
    ids: {
      type: "array",
      items: { type: "string" }
    },
    entities: {
      type: "object",
      properties: {
        Content: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              authorId: { type: "string" },
              latestId: { type: "string" },
              tagIds: {
                type: "array",
                items: { type: "string" }
              },
              lang: { type: "string" },
              title: { type: "string" },
              summary: { type: "string" },
              isPrivate: { type: "boolean" },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        },
        ContentRevision: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              contentId: { type: "string" },
              lang: { type: "string" },
              tags: {
                type: "array",
                items: { type: "string" }
              },
              title: { type: "string" },
              summary: { type: "string" },
              comment: { type: "string" },
              items: {
                type: "array",
                items: {
                  anyOf: [
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          enum: ["text"]
                        },
                        lang: { type: "string" },
                        id: { type: "string" },
                        value: { type: "string" },
                        comment: {
                          type: "string"
                        }
                      }
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          enum: ["kana"]
                        },
                        id: { type: "string" },
                        value: { type: "string" },
                        comment: {
                          type: "string"
                        }
                      }
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          enum: ["kanji"]
                        },
                        kanji: { type: "string" },
                        id: { type: "string" },
                        value: { type: "string" },
                        comment: {
                          type: "string"
                        }
                      }
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          enum: ["code"]
                        },
                        lang: { type: "string" },
                        id: { type: "string" },
                        value: { type: "string" },
                        comment: {
                          type: "string"
                        }
                      }
                    },
                    {
                      type: "object",
                      properties: {
                        type: {
                          type: "string",
                          enum: ["math"]
                        },
                        id: { type: "string" },
                        value: { type: "string" },
                        comment: {
                          type: "string"
                        }
                      }
                    }
                  ]
                }
              },
              isLinear: { type: "boolean" },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        },
        ContentTag: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              name: { type: "string" },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        },
        User: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              name: { type: "string" },
              permission: {
                enum: [
                  "Admin",
                  "Ghost",
                  "Guest",
                  "Owner",
                  "Write"
                ],
                type: "string"
              },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        },
        UserAccount: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              userId: { type: "string" },
              provider: {
                type: "string",
                enum: ["github"]
              },
              accountId: { type: "string" },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        },
        UserConfig: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              userId: { type: "string" },
              name: { type: "string" },
              settings: {
                type: "object",
                properties: {
                  theme: {
                    enum: ["dark", "light"],
                    type: "string"
                  },
                  lang: {
                    enum: ["en", "ja"],
                    type: "string"
                  }
                }
              },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        },
        UserSession: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              userId: { type: "string" },
              userAgent: { type: "string" },
              id: {
                format: ": uuid",
                type: "string"
              },
              createdAt: { type: "number" },
              updatedAt: { type: "number" },
              fetchedAt: { type: "number" }
            }
          }
        }
      }
    },
    count: { type: "number" }
  }
};
