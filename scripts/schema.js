// @ts-check

const path = require("path");
const fs = require("fs");
const prettier = require("prettier");
const TJS = require("typescript-json-schema");

const generateSchema = () => {
  const inputFilePath = "src/shared/api/request/params.ts";
  const outputFilePath = "src/server/api/request/schema.ts";
  const typeName = "EntityTypeToParams";

  const program = TJS.getProgramFromFiles([path.join(process.cwd(), inputFilePath)], {
    target: "es5",
    lib: ["dom", "esnext"]
  });
  const schema = TJS.generateSchema(program, typeName, { ref: false });
  if (schema == null) {
    throw new Error();
  }

  delete schema.$schema;

  const decoratedSchema = `
	/**
	 * This file was automatically generated by typescript-json-schema
	 */
  import { OpenAPIV3 } from "openapi-types";
  import { EntityType } from "../../../shared/api/entities";

	export const entityTypeToParamsSchema: { [P in EntityType]: OpenAPIV3.SchemaObject } = ${JSON.stringify(
    schema.properties
  )}
	`;
  const prettieredSchema = prettier.format(decoratedSchema, { parser: "typescript", printWidth: 120 });

  fs.writeFileSync(path.join(process.cwd(), outputFilePath), prettieredSchema);
};

generateSchema();
